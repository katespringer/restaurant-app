{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\keskt\\\\restaurant-app\\\\components\\\\dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query GetRestaurantsDishes($id: ID!) {\\n      restaurant(id: $id) {\\n        data {\\n          id\\n          attributes {\\n            name\\n            dishes {\\n              data {\\n                id\\n                attributes {\\n                  name\\n                  description\\n                  price\\n                  image {\\n                    data {\\n                      attributes {\\n                        url\\n                      }\\n                    }\\n                  }\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col } from \"reactstrap\";\n\nfunction Dishes(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  console.log(\"restID-dishes\", restId);\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"data-restaurant-dishes\", data.restaurant);\n  console.log(\"Query Data-disshes: \".concat(data.restaurant));\n  var restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, restaurant.data.attributes.dishes.data.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: \"http://localhost:1337\".concat(res.attributes.image.data[0].attributes.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      }, __jsx(CardTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, res.attributes.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, res.attributes.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        outline: true,\n        onClick: function onClick() {\n          addItem(res);\n          console.log(\" addItem(res)\", res);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, \"+ Add To Cart\"))));\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 12\n      }\n    }, \" No Dishes\");\n  }\n}\n\n_s(Dishes, \"en1oChIBvPo9BEyUmlI7ItVhHWA=\", false, function () {\n  return [useRouter, useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/keskt/restaurant-app/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Dishes","restId","restaurantID","setRestaurantID","console","log","addItem","GET_RESTAURANT_DISHES","router","variables","id","loading","error","data","restaurant","attributes","dishes","map","res","padding","margin","height","width","image","url","name","description"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { useState, useContext } from \"react\";\r\nimport AppContext from \"./context\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Col,\r\n} from \"reactstrap\";\r\nfunction Dishes({ restId }) {\r\n  const [restaurantID, setRestaurantID] = useState();\r\n  console.log(\"restID-dishes\", restId);\r\n  const { addItem } = useContext(AppContext);\r\n\r\n  const GET_RESTAURANT_DISHES = gql`\r\n    query GetRestaurantsDishes($id: ID!) {\r\n      restaurant(id: $id) {\r\n        data {\r\n          id\r\n          attributes {\r\n            name\r\n            dishes {\r\n              data {\r\n                id\r\n                attributes {\r\n                  name\r\n                  description\r\n                  price\r\n                  image {\r\n                    data {\r\n                      attributes {\r\n                        url\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const router = useRouter();\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\r\n    variables: { id: restId },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR here</p>;\r\n  if (!data) return <p>Not found</p>;\r\n  console.log(\"data-restaurant-dishes\", data.restaurant);\r\n  console.log(`Query Data-disshes: ${data.restaurant}`);\r\n\r\n  let restaurant = data.restaurant;\r\n\r\n  if (restId > 0) {\r\n    return (\r\n      <>\r\n        {restaurant.data.attributes.dishes.data.map((res) => (\r\n          <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\r\n            <Card style={{ margin: \"0 10px\" }}>\r\n              <CardImg\r\n                top={true}\r\n                style={{ height: 150, width: 150 }}\r\n                src={`http://localhost:1337${res.attributes.image.data[0].attributes.url}`}\r\n              />\r\n              <CardBody>\r\n                <CardTitle>{res.attributes.name}</CardTitle>\r\n                <CardText>{res.attributes.description}</CardText>\r\n              </CardBody>\r\n              <div className=\"card-footer\">\r\n                <Button\r\n                  color=\"info\"\r\n                  outline\r\n                  onClick={() => {\r\n                    addItem(res);\r\n                    console.log(\" addItem(res)\", res);\r\n                  }}\r\n                >\r\n                  + Add To Cart\r\n                </Button>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </>\r\n    );\r\n  } else {\r\n    return <h1> No Dishes</h1>;\r\n  }\r\n}\r\nexport default Dishes;\r\n"]},"metadata":{},"sourceType":"module"}