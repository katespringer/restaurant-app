{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keskt\\\\restaurant-app\\\\components\\\\dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col } from \"reactstrap\";\n\nfunction Dishes({\n  restId\n}) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  console.log(\"restID-dishes\", restId);\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n    query GetRestaurantsDishes($id: ID!) {\n      restaurant(id: $id) {\n        data {\n          id\n          attributes {\n            name\n            dishes {\n              data {\n                id\n                attributes {\n                  name\n                  description\n                  price\n                  image {\n                    data {\n                      attributes {\n                        url\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"data-restaurant-dishes\", data.restaurant);\n  console.log(`Query Data-disshes: ${data.restaurant}`);\n  let restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, restaurant.data.attributes.dishes.data.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      style: {\n        padding: 0\n      },\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 150,\n        width: 150\n      },\n      src: `http://localhost:1337${res.attributes.image.data[0].attributes.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, res.attributes.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, res.attributes.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      outline: true,\n      onClick: () => {\n        addItem(res);\n        console.log(\" addItem(res)\", res);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"+ Add To Cart\"))))));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 12\n      }\n    }, \" No Dishes\");\n  }\n}\n\nexport default Dishes;","map":{"version":3,"sources":["C:/Users/keskt/restaurant-app/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Dishes","restId","restaurantID","setRestaurantID","console","log","addItem","GET_RESTAURANT_DISHES","router","loading","error","data","variables","id","restaurant","attributes","dishes","map","res","padding","margin","height","width","image","url","name","description"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { useState, useContext } from \"react\";\r\nimport AppContext from \"./context\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Col,\r\n} from \"reactstrap\";\r\nfunction Dishes({ restId }) {\r\n  const [restaurantID, setRestaurantID] = useState();\r\n  console.log(\"restID-dishes\", restId);\r\n  const { addItem } = useContext(AppContext);\r\n\r\n  const GET_RESTAURANT_DISHES = gql`\r\n    query GetRestaurantsDishes($id: ID!) {\r\n      restaurant(id: $id) {\r\n        data {\r\n          id\r\n          attributes {\r\n            name\r\n            dishes {\r\n              data {\r\n                id\r\n                attributes {\r\n                  name\r\n                  description\r\n                  price\r\n                  image {\r\n                    data {\r\n                      attributes {\r\n                        url\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const router = useRouter();\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\r\n    variables: { id: restId },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR here</p>;\r\n  if (!data) return <p>Not found</p>;\r\n  console.log(\"data-restaurant-dishes\", data.restaurant);\r\n  console.log(`Query Data-disshes: ${data.restaurant}`);\r\n\r\n  let restaurant = data.restaurant;\r\n\r\n  if (restId > 0) {\r\n    return (\r\n      <>\r\n        {restaurant.data.attributes.dishes.data.map((res) => (\r\n          <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\r\n            <Card style={{ margin: \"0 10px\" }}>\r\n              <CardImg\r\n                top={true}\r\n                style={{ height: 150, width: 150 }}\r\n                src={`http://localhost:1337${res.attributes.image.data[0].attributes.url}`}\r\n              />\r\n              <CardBody>\r\n                <CardTitle>{res.attributes.name}</CardTitle>\r\n                <CardText>{res.attributes.description}</CardText>\r\n              </CardBody>\r\n              <div className=\"card-footer\">\r\n                <Button\r\n                  color=\"info\"\r\n                  outline\r\n                  onClick={() => {\r\n                    addItem(res);\r\n                    console.log(\" addItem(res)\", res);\r\n                  }}\r\n                >\r\n                  + Add To Cart\r\n                </Button>\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </>\r\n    );\r\n  } else {\r\n    return <h1> No Dishes</h1>;\r\n  }\r\n}\r\nexport default Dishes;\r\n"]},"metadata":{},"sourceType":"module"}